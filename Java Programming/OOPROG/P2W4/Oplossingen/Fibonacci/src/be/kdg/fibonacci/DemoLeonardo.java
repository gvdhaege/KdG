package be.kdg.fibonacci;

/**
 * @author Kristiaan Behiels
 * @version 1.0 16/11/13
 */

/*
 Vul aan zodat je de verwachte uitvoer bekomt.
 */
public class DemoLeonardo {
    public static void main(String[] args) {
        try {
            Fibonacci.finonacciGetal(-1);
        }
        catch(FibonacciException e) {
            System.out.println(e);
        }
        System.out.println();
        try {
           for (int i = 0; i < 100; i++) {
               double deeltal = Fibonacci.finonacciGetal(i + 1);
               long deler = Fibonacci.finonacciGetal(i);
               System.out.printf("f(%d) / f(%d) = %.15f%n", i + 1, i, deeltal / deler);
           }
        } catch (FibonacciException e) {
           System.out.println(e);
        }
    }
}

// Verwachte uitvoer
/*
Negatieve waarden zijn uitgesloten!
be.kdg.fibonacci.FibonacciException

f(1) / f(0) = Infinity
f(2) / f(1) = 2,000000000000000
f(3) / f(2) = 1,500000000000000
f(4) / f(3) = 1,666666666666667
f(5) / f(4) = 1,600000000000000
f(6) / f(5) = 1,625000000000000
f(7) / f(6) = 1,615384615384615
f(8) / f(7) = 1,619047619047619
f(9) / f(8) = 1,617647058823529
f(10) / f(9) = 1,618181818181818
f(11) / f(10) = 1,617977528089888
f(12) / f(11) = 1,618055555555556
f(13) / f(12) = 1,618025751072961
f(14) / f(13) = 1,618037135278515
f(15) / f(14) = 1,618032786885246
f(16) / f(15) = 1,618034447821682
f(17) / f(16) = 1,618033813400125
f(18) / f(17) = 1,618034055727554
f(19) / f(18) = 1,618033963166706
f(20) / f(19) = 1,618033998521803
f(21) / f(20) = 1,618033985017358
f(22) / f(21) = 1,618033990175597
f(23) / f(22) = 1,618033988205325
f(24) / f(23) = 1,618033988957902
f(25) / f(24) = 1,618033988670443
f(26) / f(25) = 1,618033988780243
f(27) / f(26) = 1,618033988738303
f(28) / f(27) = 1,618033988754323
f(29) / f(28) = 1,618033988748204
f(30) / f(29) = 1,618033988750541
f(31) / f(30) = 1,618033988749648
f(32) / f(31) = 1,618033988749989
f(33) / f(32) = 1,618033988749859
f(34) / f(33) = 1,618033988749909
f(35) / f(34) = 1,618033988749890
f(36) / f(35) = 1,618033988749897
f(37) / f(36) = 1,618033988749894
f(38) / f(37) = 1,618033988749895
f(39) / f(38) = 1,618033988749895
f(40) / f(39) = 1,618033988749895
f(41) / f(40) = 1,618033988749895
f(42) / f(41) = 1,618033988749895
f(43) / f(42) = 1,618033988749895
f(44) / f(43) = 1,618033988749895
f(45) / f(44) = 1,618033988749895
f(46) / f(45) = 1,618033988749895
f(47) / f(46) = 1,618033988749895
f(48) / f(47) = 1,618033988749895
f(49) / f(48) = 1,618033988749895
f(50) / f(49) = 1,618033988749895
f(51) / f(50) = 1,618033988749895
f(52) / f(51) = 1,618033988749895
f(53) / f(52) = 1,618033988749895
f(54) / f(53) = 1,618033988749895
f(55) / f(54) = 1,618033988749895
f(56) / f(55) = 1,618033988749895
f(57) / f(56) = 1,618033988749895
f(58) / f(57) = 1,618033988749895
f(59) / f(58) = 1,618033988749895
f(60) / f(59) = 1,618033988749895
f(61) / f(60) = 1,618033988749895
f(62) / f(61) = 1,618033988749895
f(63) / f(62) = 1,618033988749895
f(64) / f(63) = 1,618033988749895
f(65) / f(64) = 1,618033988749895
f(66) / f(65) = 1,618033988749895
f(67) / f(66) = 1,618033988749895
f(68) / f(67) = 1,618033988749895
f(69) / f(68) = 1,618033988749895
f(70) / f(69) = 1,618033988749895
f(71) / f(70) = 1,618033988749895
f(72) / f(71) = 1,618033988749895
f(73) / f(72) = 1,618033988749895
f(74) / f(73) = 1,618033988749895
f(75) / f(74) = 1,618033988749895
f(76) / f(75) = 1,618033988749895
f(77) / f(76) = 1,618033988749895
f(78) / f(77) = 1,618033988749895
f(79) / f(78) = 1,618033988749895
f(80) / f(79) = 1,618033988749895
f(81) / f(80) = 1,618033988749895
f(82) / f(81) = 1,618033988749895
f(83) / f(82) = 1,618033988749895
f(84) / f(83) = 1,618033988749895
f(85) / f(84) = 1,618033988749895
f(86) / f(85) = 1,618033988749895
f(87) / f(86) = 1,618033988749895
f(88) / f(87) = 1,618033988749895
f(89) / f(88) = 1,618033988749895
f(90) / f(89) = 1,618033988749895
f(91) / f(90) = 1,618033988749895
De maximale waarde voor type long werd overschreden!
be.kdg.fibonacci.FibonacciException
*/